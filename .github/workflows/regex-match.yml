name: no js club
on:
  issues:
    types: [opened, edited, reopened]
  issue_comment:
    types: [created]


  workflow_dispatch:

env:
  ISSUE_NUM: ${{ github.event.issue.number }}

jobs:

  jobs-1:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}

    - uses: actions-ecosystem/action-regex-match@v2
      id: domain-validate
      with:
        text: ${{ github.event.issue.body }}
        regex: '^Domain:\s*(.+)$'
        flags: 'mg'

    - id: get-script
      shell: bash {0}
      env:
        DOMAIN: ${{ steps.domain-validate.outputs.group1 }}
      run: |
        echo "Issue #$ISSUE_NUM, candidate $DOMAIN"

        if grep -Fq "$DOMAIN," data/sites.csv; then
            echo "$DOMAIN found in sites already"
            echo ::set-output name=comment::"Thank you for your contribution but $DOMAIN already exists in data."
        else
            echo "$DOMAIN not found in data.. Attempting to get page content."
            js_out=$(curl --silent --show-error -L $DOMAIN | grep -F '<script')
            echo "js snippet found: $js_out"
            if [ -z $js_out ]; then
              body="No Javascript found on $DOMAIN"
            else
              body="Javascript found on $DOMAIN:

              \`\`\`$js_out\`\`\`"
              body="${body//'%'/'%25'}"
              body="${body//$'\n'/'%0A'}"
              body="${body//$'\r'/'%0D'}"
            fi

            echo "Comment body: $body"
            echo ::set-output name=comment::$body
          fi


    - name: create Comment
      uses: peter-evans/create-or-update-comment@v1
      with:
        issue-number: ${{ env.ISSUE_NUM }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: ${{ steps.get-script.outputs.comment }}

   update-repo:
     runs-on: ubuntu-latest
     if: github.event.comment.user.login == 'wicked-smart' && contains(github.event.comment.body, '/approve') && githuv.event_name == issue_comment

     steps:
       - uses: actions/checkout@v2
         with:
           ref: ${{ github.head_ref }}
           token: ${{ secrets.JEKYLL_PAT }}

      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ github.event.comment.body }}
          regex: '^/approve\s(.+)\s(.+)$'
          flags: 'mg'

      - name: Update repo data
        if: ${{ steps.regex-match.outputs.match != '' }}
        shell: bash
        run: |
          echo "${{ steps.regex-match.outputs.group1 }},${{ steps.regex-match.outputs.group2 }}" >> data/sites.csv


      - uses: stefanzweifel/git-auto-commit-action@v4
        if: ${{ steps.regex-match.outputs.match != '' }}
        with:
          commit_message: "add ${{ steps.regex-match.outputs.group1 }}, fixes #${{ env.ISSUE_NUM }}"

      - name: Close Issue
        if: ${{ steps.regex-match.outputs.match != '' }}
        uses: peter-evans/close-issue@v1
        with:
          issue-number: ${{ env.ISSUE_NUM }}
          token: ${{ secrets.GITHUB_TOKEN }}
          comment: Domain added to data. checkout data/site.csv.
